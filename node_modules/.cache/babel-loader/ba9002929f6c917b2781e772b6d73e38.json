{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jony8\\\\OneDrive\\\\Documentos\\\\AP.NET-CORE\\\\react-travel\\\\src\\\\viajes\\\\EditarViajes.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Cargando from \"utils/Cargando\";\nimport { urlViajes } from \"utils/endpoints\";\nimport { convertirViajeAFormData } from \"utils/FormDataUtils\";\nimport MostrarErrores from \"utils/MostarErrores\";\nimport FormularioViajes from \"./FormularioViajes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditarViajes() {\n  _s();\n\n  const [viajes, setViajes] = useState();\n  const [viajePutGet, setViajePutGet] = useState();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [errores, setErrores] = useState([]);\n  useEffect(() => {\n    axios.get(`${urlViajes}/PutGet/${id}`).then(respuesta => {\n      const modelo = {\n        pais: respuesta.data.viaje.pais,\n        lugar: respuesta.data.viaje.lugar,\n        descripcion: respuesta.data.viaje.descripcion,\n        fotoURL: respuesta.data.viaje.foto,\n        precio: respuesta.data.viaje.precio\n      };\n      setViajes(modelo);\n      setViajePutGet(respuesta.data);\n    });\n  }, [id]);\n\n  async function editarViaje(viajeEditar) {\n    try {\n      const formData = convertirViajeAFormData(viajeEditar);\n      await axios({\n        method: 'put',\n        url: `${urlViajes}/${id}`,\n        data: formData,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(respuesta => {\n        history.push(`/viaje/${id}`);\n      });\n    } catch (error) {\n      setErrores(error.response.data);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Editar Pel\\xEDcula\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MostrarErrores, {\n      errores: errores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), viajes && viajePutGet ? /*#__PURE__*/_jsxDEV(FormularioViajes, {\n      promocionesSeleccionados: viajePutGet.promocionesSeleccionados,\n      promocionesNoSeleccionados: viajePutGet.promocionesNoSeleccionados,\n      tiposActividadesSeleccionados: viajePutGet.tipoActividadesSeleccionados,\n      tiposActividadesNoSeleccionados: viajePutGet.tipoActividadesNoSeleccionados,\n      modelo: viajes,\n      onSubmit: async valores => await editarViaje(valores)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(Cargando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditarViajes, \"bDIz+sWZ0bqIhKneHEqIFkNtgVU=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditarViajes;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditarViajes\");","map":{"version":3,"sources":["C:/Users/jony8/OneDrive/Documentos/AP.NET-CORE/react-travel/src/viajes/EditarViajes.tsx"],"names":["axios","useEffect","useState","useHistory","useParams","Cargando","urlViajes","convertirViajeAFormData","MostrarErrores","FormularioViajes","EditarViajes","viajes","setViajes","viajePutGet","setViajePutGet","id","history","errores","setErrores","get","then","respuesta","modelo","pais","data","viaje","lugar","descripcion","fotoURL","foto","precio","editarViaje","viajeEditar","formData","method","url","headers","push","error","response","promocionesSeleccionados","promocionesNoSeleccionados","tipoActividadesSeleccionados","tipoActividadesNoSeleccionados","valores"],"mappings":";;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAGA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAGnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,EAA9C;AACA,QAAM;AAACa,IAAAA;AAAD,MAAYX,SAAS,EAA3B;AAEA,QAAMY,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAW,EAAX,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAEb,SAAU,WAAUS,EAAG,EAApC,EACCK,IADD,CACOC,SAAD,IAA8C;AAChD,YAAMC,MAAwB,GAAG;AAC7BC,QAAAA,IAAI,EAAEF,SAAS,CAACG,IAAV,CAAeC,KAAf,CAAqBF,IADE;AAE7BG,QAAAA,KAAK,EAAEL,SAAS,CAACG,IAAV,CAAeC,KAAf,CAAqBC,KAFC;AAG7BC,QAAAA,WAAW,EAAEN,SAAS,CAACG,IAAV,CAAeC,KAAf,CAAqBE,WAHL;AAI7BC,QAAAA,OAAO,EAAEP,SAAS,CAACG,IAAV,CAAeC,KAAf,CAAqBI,IAJD;AAK7BC,QAAAA,MAAM,EAAET,SAAS,CAACG,IAAV,CAAeC,KAAf,CAAqBK;AALA,OAAjC;AAOAlB,MAAAA,SAAS,CAACU,MAAD,CAAT;AACAR,MAAAA,cAAc,CAACO,SAAS,CAACG,IAAX,CAAd;AACH,KAXD;AAYH,GAbQ,EAaN,CAACT,EAAD,CAbM,CAAT;;AAeA,iBAAegB,WAAf,CAA2BC,WAA3B,EAAyD;AACrD,QAAG;AACC,YAAMC,QAAQ,GAAG1B,uBAAuB,CAACyB,WAAD,CAAxC;AACA,YAAMhC,KAAK,CAAC;AACRkC,QAAAA,MAAM,EAAE,KADA;AAERC,QAAAA,GAAG,EAAG,GAAE7B,SAAU,IAAGS,EAAG,EAFhB;AAGRS,QAAAA,IAAI,EAAES,QAHE;AAIRG,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAJD,OAAD,CAAL,CAKHhB,IALG,CAKGC,SAAD,IAAsC;AAC1CL,QAAAA,OAAO,CAACqB,IAAR,CAAc,UAAStB,EAAG,EAA1B;AACH,OAPK,CAAN;AAQH,KAVD,CAUC,OAAMuB,KAAN,EAAY;AACTpB,MAAAA,UAAU,CAACoB,KAAK,CAACC,QAAN,CAAef,IAAhB,CAAV;AACH;AACJ;;AAED,sBAEI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEP;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKN,MAAM,IAAIE,WAAV,gBAAwB,QAAC,gBAAD;AACzB,MAAA,wBAAwB,EAAEA,WAAW,CAAE2B,wBADd;AAEzB,MAAA,0BAA0B,EAAE3B,WAAW,CAAE4B,0BAFhB;AAGzB,MAAA,6BAA6B,EAAE5B,WAAW,CAAE6B,4BAHnB;AAIzB,MAAA,+BAA+B,EAAE7B,WAAW,CAAE8B,8BAJrB;AAKrB,MAAA,MAAM,EAAEhC,MALa;AAMrB,MAAA,QAAQ,EAAE,MAAMiC,OAAN,IAAiB,MAAMb,WAAW,CAACa,OAAD;AANvB;AAAA;AAAA;AAAA;AAAA,YAAxB,gBAOI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAVT;AAAA,kBAFJ;AAgBH;;GAzDuBlC,Y;UAKFN,S,EAEFD,U;;;KAPIO,Y","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Cargando from \"utils/Cargando\";\r\nimport { urlViajes } from \"utils/endpoints\";\r\nimport { convertirViajeAFormData } from \"utils/FormDataUtils\";\r\nimport MostrarErrores from \"utils/MostarErrores\";\r\nimport FormularioViajes from \"./FormularioViajes\";\r\nimport { viajeCreacionDTO, viajePutGetDTO } from \"./viajes.model\";\r\n\r\nexport default function EditarViajes() {\r\n\r\n\r\n    const [viajes, setViajes] = useState<viajeCreacionDTO>();\r\n    const [viajePutGet, setViajePutGet] = useState<viajePutGetDTO>();\r\n    const {id}: any = useParams();\r\n\r\n    const history = useHistory();\r\n    const [errores, setErrores] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`${urlViajes}/PutGet/${id}`)\r\n        .then((respuesta: AxiosResponse<viajePutGetDTO>) => {\r\n            const modelo: viajeCreacionDTO = {\r\n                pais: respuesta.data.viaje.pais,\r\n                lugar: respuesta.data.viaje.lugar,\r\n                descripcion: respuesta.data.viaje.descripcion,\r\n                fotoURL: respuesta.data.viaje.foto,\r\n                precio: respuesta.data.viaje.precio,\r\n            };\r\n            setViajes(modelo);\r\n            setViajePutGet(respuesta.data);\r\n        })\r\n    }, [id])\r\n\r\n    async function editarViaje(viajeEditar:viajeCreacionDTO) {\r\n        try{\r\n            const formData = convertirViajeAFormData(viajeEditar);\r\n            await axios({\r\n                method: 'put',\r\n                url: `${urlViajes}/${id}`,\r\n                data: formData,\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            }).then((respuesta: AxiosResponse<number>) => {\r\n                history.push(`/viaje/${id}`);\r\n            });\r\n        }catch(error){\r\n            setErrores(error.response.data);\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <h3>Editar Pel√≠cula</h3>\r\n            <MostrarErrores errores={errores} />\r\n            {viajes && viajePutGet ? <FormularioViajes\r\n            promocionesSeleccionados={viajePutGet!.promocionesSeleccionados}\r\n            promocionesNoSeleccionados={viajePutGet!.promocionesNoSeleccionados}\r\n            tiposActividadesSeleccionados={viajePutGet!.tipoActividadesSeleccionados}\r\n            tiposActividadesNoSeleccionados={viajePutGet!.tipoActividadesNoSeleccionados}\r\n                modelo={viajes}\r\n                onSubmit={async valores => await editarViaje(valores)}\r\n            /> : <Cargando />}\r\n        </>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}