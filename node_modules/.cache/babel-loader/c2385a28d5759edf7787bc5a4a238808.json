{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jony8\\\\OneDrive\\\\Documentos\\\\AP.NET-CORE\\\\react-travel\\\\src\\\\auth\\\\FormulartioAuth.tsx\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport FormGroupText from \"utils/FormGroupText\";\nimport Button from \"utils/Button\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FormularioAuth(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.type === 'logout' ? /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: props.modelo,\n      onSubmit: props.onSubmit,\n      validationSchema: Yup.object({\n        email: Yup.string().required('Este campo es requerido').email('Debe colocar un email valido'),\n        password: Yup.string().required('Este campo es requerido').min(8, 'La contraseña es demasiado pequeña - El numero de caracteres minimo es 8.'),\n        password2: Yup.string().required('Este campo es requerido').min(8, 'La contraseña es demasiado pequeña - El numero de caracteres minimo es 8.').oneOf([Yup.ref('password'), null], 'Las contraseñas no coinciden')\n      }),\n      children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroupText, {\n          label: \"Email\",\n          campo: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroupText, {\n          label: \"Password\",\n          campo: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), props.type === 'logout' ? /*#__PURE__*/_jsxDEV(FormGroupText, {\n          label: \"Repetir Password\",\n          campo: \"password2\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 48\n        }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n          disabled: formikProps.isSubmitting,\n          type: \"submit\",\n          id: \"crear-usuario\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary\",\n          to: \"/\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: props.modelo,\n      onSubmit: props.onSubmit,\n      validationSchema: Yup.object({\n        email: Yup.string().required('Este campo es requerido').email('Debe colocar un email valido'),\n        password: Yup.string().required('Este campo es requerido').min(8, 'La contraseña es demasiado pequeña - El numero de caracteres minimo es 8.')\n      }),\n      children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroupText, {\n          label: \"Email\",\n          campo: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(FormGroupText, {\n          label: \"Password\",\n          campo: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: formikProps.isSubmitting,\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary\",\n          to: \"/\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n_c = FormularioAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioAuth\");","map":{"version":3,"sources":["C:/Users/jony8/OneDrive/Documentos/AP.NET-CORE/react-travel/src/auth/FormulartioAuth.tsx"],"names":["Form","Formik","Yup","FormGroupText","Button","Link","FormularioAuth","props","type","modelo","onSubmit","object","email","string","required","password","min","password2","oneOf","ref","formikProps","isSubmitting"],"mappings":"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","sourcesContent":["import { Form, Formik, FormikHelpers } from \"formik\";\r\nimport { credencialesUsuario } from \"./auth.model\";\r\nimport * as Yup from 'yup';\r\nimport FormGroupText from \"utils/FormGroupText\";\r\nimport Button from \"utils/Button\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport default function FormularioAuth(props: formularioAuthProps){\r\n\r\n    return(\r\n\r\n        <>\r\n            {props.type === 'logout' ?\r\n        <Formik initialValues={props.modelo}\r\n        onSubmit={props.onSubmit}\r\n        validationSchema={Yup.object({\r\n            email: Yup.string().required('Este campo es requerido').email('Debe colocar un email valido'),\r\n            password: Yup.string().required('Este campo es requerido') \r\n                .min(8, 'La contraseña es demasiado pequeña - El numero de caracteres minimo es 8.'),\r\n            password2: Yup.string().required('Este campo es requerido') \r\n                .min(8, 'La contraseña es demasiado pequeña - El numero de caracteres minimo es 8.')\r\n                .oneOf([Yup.ref('password'), null], 'Las contraseñas no coinciden'),\r\n        })} \r\n        \r\n        >\r\n        \r\n            {formikProps => (\r\n                <Form>\r\n                    <FormGroupText label=\"Email\" campo=\"email\" />\r\n                    <FormGroupText label=\"Password\" campo=\"password\" type=\"password\" />\r\n                    {props.type === 'logout' ? <FormGroupText label=\"Repetir Password\" campo=\"password2\" type=\"password\" /> : null }\r\n                    \r\n\r\n                    <Button disabled={formikProps.isSubmitting} type=\"submit\" id=\"crear-usuario\">Enviar</Button>\r\n                    <Link className=\"btn btn-secondary\" to=\"/\">Cancelar</Link>\r\n                </Form>\r\n            )}\r\n\r\n\r\n        </Formik>\r\n         : <Formik initialValues={props.modelo}\r\n         onSubmit={props.onSubmit}\r\n         validationSchema={Yup.object({\r\n             email: Yup.string().required('Este campo es requerido').email('Debe colocar un email valido'),\r\n             password: Yup.string().required('Este campo es requerido') \r\n                 .min(8, 'La contraseña es demasiado pequeña - El numero de caracteres minimo es 8.'),\r\n         })} \r\n         \r\n         >\r\n         \r\n             {formikProps => (\r\n                 <Form>\r\n                     <FormGroupText label=\"Email\" campo=\"email\" />\r\n                     <FormGroupText label=\"Password\" campo=\"password\" type=\"password\" />\r\n                     \r\n\r\n                     <Button disabled={formikProps.isSubmitting} type=\"submit\">Enviar</Button>\r\n                     <Link className=\"btn btn-secondary\" to=\"/\">Cancelar</Link>\r\n                 </Form>\r\n             )}\r\n\r\n\r\n         </Formik> }\r\n\r\n        \r\n        \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\ninterface formularioAuthProps{\r\n    modelo: credencialesUsuario;\r\n    type: string;\r\n    onSubmit(valores: credencialesUsuario, acciones: FormikHelpers<credencialesUsuario>): void\r\n}"]},"metadata":{},"sourceType":"module"}