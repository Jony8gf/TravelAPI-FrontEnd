{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jony8\\\\OneDrive\\\\Escritorio\\\\react-peliculas\\\\src\\\\actores\\\\CrearActores.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { urlActores } from 'utils/endpoints';\nimport { convertirActorAFormData } from 'utils/FormDataUtils';\nimport MostrarErrores from 'utils/MostarErrores';\nimport FormularioActores from './FormularioActores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CrearActores() {\n  _s();\n\n  const history = useHistory();\n  const [errores, setErrores] = useState([]);\n\n  async function crearActor(actor) {\n    try {\n      const formData = convertirActorAFormData(actor);\n      await axios({\n        method: 'post',\n        url: urlActores,\n        data: formData,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      history.push('/actores');\n    } catch (error) {\n      setErrores(error.response.data);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Crear Actores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MostrarErrores, {\n      errores: errores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormularioActores, {\n      modelo: {\n        nombre: '',\n        fechaNacimiento: undefined\n      },\n      onSubmit: async valores => await crearActor(valores)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CrearActores, \"AtE2Yv7sQigjE7UeK7YR3aQ7gzE=\", false, function () {\n  return [useHistory];\n});\n\n_c = CrearActores;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrearActores\");","map":{"version":3,"sources":["C:/Users/jony8/OneDrive/Escritorio/react-peliculas/src/actores/CrearActores.tsx"],"names":["axios","useState","useHistory","urlActores","convertirActorAFormData","MostrarErrores","FormularioActores","CrearActores","history","errores","setErrores","crearActor","actor","formData","method","url","data","headers","push","error","response","nombre","fechaNacimiento","undefined","valores"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AACA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAEnC,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAW,EAAX,CAAtC;;AAEA,iBAAeU,UAAf,CAA0BC,KAA1B,EAAmD;AAC/C,QAAG;AACC,YAAMC,QAAQ,GAAGT,uBAAuB,CAACQ,KAAD,CAAxC;AACA,YAAMZ,KAAK,CAAC;AACRc,QAAAA,MAAM,EAAE,MADA;AAERC,QAAAA,GAAG,EAAEZ,UAFG;AAGRa,QAAAA,IAAI,EAAEH,QAHE;AAIRI,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAJD,OAAD,CAAX;AAMAT,MAAAA,OAAO,CAACU,IAAR,CAAa,UAAb;AACH,KATD,CAUA,OAAOC,KAAP,EAAa;AACTT,MAAAA,UAAU,CAACS,KAAK,CAACC,QAAN,CAAeJ,IAAhB,CAAV;AACH;AACJ;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEP;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,iBAAD;AACI,MAAA,MAAM,EAAE;AAACY,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,eAAe,EAAEC;AAA9B,OADZ;AAEI,MAAA,QAAQ,EAAE,MAAMC,OAAN,IAAiB,MAAMb,UAAU,CAACa,OAAD;AAF/C;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAWH;;GAhCuBjB,Y;UAEJL,U;;;KAFIK,Y","sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { urlActores } from 'utils/endpoints';\nimport { convertirActorAFormData } from 'utils/FormDataUtils';\nimport MostrarErrores from 'utils/MostarErrores';\nimport { actorCreacionDTO } from './actores.model';\nimport FormularioActores from './FormularioActores'\nexport default function CrearActores() {\n\n    const history = useHistory();\n    const [errores, setErrores] = useState<string[]>([]);\n\n    async function crearActor(actor: actorCreacionDTO) {\n        try{\n            const formData = convertirActorAFormData(actor);\n            await axios({\n                method: 'post',\n                url: urlActores,\n                data: formData,\n                headers: {'Content-Type': 'multipart/form-data'}\n            });\n            history.push('/actores');\n        }\n        catch (error){\n            setErrores(error.response.data)\n        }\n    }\n\n    return (\n        <>\n            <h3>Crear Actores</h3>\n            <MostrarErrores errores={errores} />\n            <FormularioActores\n                modelo={{nombre: '', fechaNacimiento: undefined}}\n                onSubmit={async valores => await crearActor(valores)}\n            />\n        </>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}