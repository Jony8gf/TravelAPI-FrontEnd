{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jony8\\\\OneDrive\\\\Escritorio\\\\react-peliculas\\\\src\\\\actores\\\\TypeAheadActores.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\nimport { urlActores } from \"utils/endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TypeAheadActores(props) {\n  _s();\n\n  const [estaCarganado, setEstaCargando] = useState(false);\n  const seleccion = [];\n  const [elementoArrastrado, setElementoArrastrado] = useState(undefined);\n\n  function manejarBusqueda(query) {\n    setEstaCargando(true);\n    axios.get(urlActores + \"/buscarPorNombre\" + query).then(respuesta => {\n      setEstaCargando(false);\n    });\n  }\n\n  function manejarDragStart(actor) {\n    setElementoArrastrado(actor);\n  }\n\n  function manejarDragOver(actor) {\n    if (!elementoArrastrado) {\n      return;\n    }\n\n    if (actor.id !== elementoArrastrado.id) {\n      const elementoArrastradoIndice = props.actores.findIndex(x => x.id === elementoArrastrado.id);\n      const actorIndice = props.actores.findIndex(x => x.id === actor.id);\n      const actores = [...props.actores];\n      actores[actorIndice] = elementoArrastrado;\n      actores[elementoArrastradoIndice] = actor;\n      props.onAdd(actores);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Actores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AsyncTypeahead, {\n      id: \"typeahead\",\n      onChange: actores => {\n        if (props.actores.findIndex(x => x.id === actores[0].id) === -1) {\n          props.onAdd([...props.actores, actores[0]]);\n        }\n      },\n      options: actores,\n      labelKey: actor => actor.nombre,\n      filterBy: () => true,\n      isLoading: estaCarganado,\n      onSearch: manejarBusqueda,\n      placeholder: \"Escriba el nombre del actor...\",\n      minLength: 2,\n      flip: true,\n      selected: seleccion,\n      renderMenuItemChildren: actor => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"imagen actor\",\n          src: actor.foto,\n          style: {\n            height: '64px',\n            marginRight: '10px',\n            width: '64px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: actor.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: props.actores.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n        draggable: true,\n        onDragStart: () => manejarDragStart(actor),\n        onDragOver: () => manejarDragOver(actor),\n        className: \"list-group-item list-group-item-action\",\n        children: [props.listadoUI(actor), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge badge-primary badge-pill pointer\",\n          style: {\n            marginLeft: '0.5rem'\n          },\n          onClick: () => props.onRemove(actor),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, actor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TypeAheadActores, \"Agtun/4Vq7cK0nCUaXMR/wtRFfI=\");\n\n_c = TypeAheadActores;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeAheadActores\");","map":{"version":3,"sources":["C:/Users/jony8/OneDrive/Escritorio/react-peliculas/src/actores/TypeAheadActores.tsx"],"names":["axios","useState","AsyncTypeahead","urlActores","TypeAheadActores","props","estaCarganado","setEstaCargando","seleccion","elementoArrastrado","setElementoArrastrado","undefined","manejarBusqueda","query","get","then","respuesta","manejarDragStart","actor","manejarDragOver","id","elementoArrastradoIndice","actores","findIndex","x","actorIndice","onAdd","nombre","foto","height","marginRight","width","map","listadoUI","marginLeft","onRemove"],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\nimport { ReactElement, useState } from \"react\";\nimport { AsyncTypeahead, Typeahead } from \"react-bootstrap-typeahead\";\nimport { urlActores } from \"utils/endpoints\";\nimport { actorPeliculaDTO } from \"./actores.model\";\n\nexport default function TypeAheadActores(props: typeAheadActoresProps) {\n\n    const [estaCarganado, setEstaCargando] = useState(false);\n    const seleccion: actorPeliculaDTO[] = []\n\n    const [elementoArrastrado, setElementoArrastrado] = \n        useState<actorPeliculaDTO | undefined>(undefined)\n\n    function manejarBusqueda(query: string) \n    {\n        setEstaCargando(true);\n\n        axios.get(urlActores+\"/buscarPorNombre\"+query)\n            .then((respuesta: AxiosResponse<actorPeliculaDTO[]>) => {\n                \n                setEstaCargando(false);\n            })\n\n    }\n\n    function manejarDragStart(actor: actorPeliculaDTO) \n    {\n        setElementoArrastrado(actor);\n    }\n\n    function manejarDragOver(actor: actorPeliculaDTO)\n    {\n        if (!elementoArrastrado){\n            return;\n        }\n\n        if (actor.id !== elementoArrastrado.id){\n            const elementoArrastradoIndice = \n                props.actores.findIndex(x => x.id === elementoArrastrado.id);\n            const actorIndice = \n                props.actores.findIndex(x => x.id === actor.id);\n\n            const actores = [...props.actores];\n            actores[actorIndice] = elementoArrastrado;\n            actores[elementoArrastradoIndice] = actor;\n            props.onAdd(actores);\n\n        }\n    }\n\n    return (\n        <>\n            <label>Actores</label>\n            <AsyncTypeahead\n                id=\"typeahead\"\n                onChange={actores => {\n                    if (props.actores.findIndex(x => x.id === actores[0].id) === -1) {\n                        props.onAdd([...props.actores, actores[0]]);\n                    }\n                }}\n                options={actores}\n                labelKey={actor => actor.nombre}\n                filterBy={() => true}\n                isLoading={estaCarganado}\n                onSearch={manejarBusqueda}\n                placeholder=\"Escriba el nombre del actor...\"\n                minLength={2}\n                flip={true}\n                selected={seleccion}\n                renderMenuItemChildren={actor => (\n                    <>\n                        <img alt=\"imagen actor\" src={actor.foto}\n                            style={{\n                                height: '64px',\n                                marginRight: '10px',\n                                width: '64px'\n                            }}\n                        />\n                        <span>{actor.nombre}</span>\n                    </>\n                )}\n            />\n\n            <ul className=\"list-group\">\n                {props.actores.map(actor => <li\n                    draggable={true}\n                    onDragStart={() => manejarDragStart(actor)}\n                    onDragOver={() => manejarDragOver(actor)}\n                    className=\"list-group-item list-group-item-action\"\n                    key={actor.id}>\n                    {props.listadoUI(actor)}\n                    <span className=\"badge badge-primary badge-pill pointer\"\n                        style={{ marginLeft: '0.5rem' }}\n                        onClick={() => props.onRemove(actor)}\n                    >\n                        X\n                    </span>\n                </li>)}\n            </ul>\n        </>\n    )\n}\n\ninterface typeAheadActoresProps {\n    actores: actorPeliculaDTO[];\n    onAdd(actores: actorPeliculaDTO[]): void;\n    listadoUI(actor: actorPeliculaDTO): ReactElement;\n    onRemove(actor: actorPeliculaDTO): void;\n}"]},"metadata":{},"sourceType":"module"}