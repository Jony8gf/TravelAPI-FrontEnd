{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jony8\\\\OneDrive\\\\Escritorio\\\\react-peliculas\\\\src\\\\utils\\\\EditarEntidad.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport MostrarErrores from \"./MostarErrores\";\nimport Cargando from \"./Cargando\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditarEntidad(props) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [entidad, setEntidad] = useState();\n  const [errores, setErrores] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    axios.get(`${props.url}/${id}`).then(respuesta => {\n      setEntidad(props.transformar(respuesta.data));\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function editar(entidadEditar) {\n    try {\n      if (props.transformarFormData) {\n        const formData = props.transformarFormData(entidadEditar);\n        await axios({\n          method: 'put',\n          url: `${props.url}/${id}`,\n          data: formData,\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        await axios.put(`${props.url}/${id}`, entidadEditar);\n      }\n\n      history.push(props.urlIndice);\n    } catch (error) {\n      setErrores(error.response.data);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Editar \", props.nombreEntidad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MostrarErrores, {\n      errores: errores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), entidad ? props.children(entidad, editar) : /*#__PURE__*/_jsxDEV(Cargando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 58\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditarEntidad, \"cbKOBbQkHTh1d37EHHBTZxvP0AA=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditarEntidad;\nEditarEntidad.defaultProps = {\n  transformar: entidad => entidad\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"EditarEntidad\");","map":{"version":3,"sources":["C:/Users/jony8/OneDrive/Escritorio/react-peliculas/src/utils/EditarEntidad.tsx"],"names":["axios","React","useState","useEffect","useParams","useHistory","MostrarErrores","Cargando","EditarEntidad","props","id","entidad","setEntidad","errores","setErrores","history","get","url","then","respuesta","transformar","data","editar","entidadEditar","transformarFormData","formData","method","headers","put","push","urlIndice","error","response","nombreEntidad","children","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAAyD,OAAzD;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,aAAT,CACVC,KADU,EACsC;AAAA;;AAEjD,QAAM;AAAEC,IAAAA;AAAF,MAAcN,SAAS,EAA7B;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAW,EAAX,CAAtC;AACA,QAAMa,OAAO,GAAGV,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZH,IAAAA,KAAK,CAACgB,GAAN,CAAW,GAAEP,KAAK,CAACQ,GAAI,IAAGP,EAAG,EAA7B,EACKQ,IADL,CACWC,SAAD,IAAwC;AAC1CP,MAAAA,UAAU,CAACH,KAAK,CAACW,WAAN,CAAkBD,SAAS,CAACE,IAA5B,CAAD,CAAV;AACH,KAHL,EADY,CAKZ;AACH,GANQ,EAMN,EANM,CAAT;;AAQA,iBAAeC,MAAf,CAAsBC,aAAtB,EAAgD;AAC5C,QAAI;AACA,UAAId,KAAK,CAACe,mBAAV,EAA+B;AAC3B,cAAMC,QAAQ,GAAGhB,KAAK,CAACe,mBAAN,CAA0BD,aAA1B,CAAjB;AACA,cAAMvB,KAAK,CAAC;AACR0B,UAAAA,MAAM,EAAE,KADA;AAERT,UAAAA,GAAG,EAAG,GAAER,KAAK,CAACQ,GAAI,IAAGP,EAAG,EAFhB;AAGRW,UAAAA,IAAI,EAAEI,QAHE;AAIRE,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB;AAJD,SAAD,CAAX;AAMH,OARD,MAQO;AACH,cAAM3B,KAAK,CAAC4B,GAAN,CAAW,GAAEnB,KAAK,CAACQ,GAAI,IAAGP,EAAG,EAA7B,EAAgCa,aAAhC,CAAN;AACH;;AACDR,MAAAA,OAAO,CAACc,IAAR,CAAapB,KAAK,CAACqB,SAAnB;AACH,KAbD,CAcA,OAAOC,KAAP,EAAc;AACVjB,MAAAA,UAAU,CAACiB,KAAK,CAACC,QAAN,CAAeX,IAAhB,CAAV;AACH;AACJ;;AAED,sBACI;AAAA,4BACI;AAAA,4BAAYZ,KAAK,CAACwB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEpB;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKF,OAAO,GAAGF,KAAK,CAACyB,QAAN,CAAevB,OAAf,EAAwBW,MAAxB,CAAH,gBAAqC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAHjD;AAAA,kBADJ;AAQH;;GA5CuBd,a;UAGAJ,S,EAGJC,U;;;KANIG,a;AAuDxBA,aAAa,CAAC2B,YAAd,GAA6B;AACzBf,EAAAA,WAAW,EAAGT,OAAD,IAAkBA;AADN,CAA7B","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport React, { useState, useEffect, ReactElement } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport MostrarErrores from \"./MostarErrores\";\r\nimport Cargando from \"./Cargando\";\r\n\r\nexport default function EditarEntidad<TCreacion, TLectura>\r\n    (props: editarEntidadProps<TCreacion, TLectura>) {\r\n\r\n    const { id }: any = useParams();\r\n    const [entidad, setEntidad] = useState<TCreacion>();\r\n    const [errores, setErrores] = useState<string[]>([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        axios.get(`${props.url}/${id}`)\r\n            .then((respuesta: AxiosResponse<TLectura>) => {\r\n                setEntidad(props.transformar(respuesta.data));\r\n            })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    async function editar(entidadEditar: TCreacion) {\r\n        try {\r\n            if (props.transformarFormData) {\r\n                const formData = props.transformarFormData(entidadEditar);\r\n                await axios({\r\n                    method: 'put',\r\n                    url: `${props.url}/${id}`,\r\n                    data: formData,\r\n                    headers: { 'Content-Type': 'multipart/form-data' }\r\n                });\r\n            } else {\r\n                await axios.put(`${props.url}/${id}`, entidadEditar);\r\n            }\r\n            history.push(props.urlIndice);\r\n        }\r\n        catch (error) {\r\n            setErrores(error.response.data)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Editar {props.nombreEntidad}</h3>\r\n            <MostrarErrores errores={errores} />\r\n            {entidad ? props.children(entidad, editar) : <Cargando />}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\ninterface editarEntidadProps<TCreacion, TLectura> {\r\n    url: string;\r\n    urlIndice: string;\r\n    nombreEntidad: string;\r\n    children(entidad: TCreacion, editar: (entidad: TCreacion) => void): ReactElement;\r\n    transformar(entidad: TLectura): TCreacion;\r\n    transformarFormData?(modelo: TCreacion): FormData\r\n}\r\n\r\nEditarEntidad.defaultProps = {\r\n    transformar: (entidad: any) => entidad\r\n}"]},"metadata":{},"sourceType":"module"}