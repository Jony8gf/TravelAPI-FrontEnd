{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jony8\\\\OneDrive\\\\Documentos\\\\AP.NET-CORE\\\\react-travel\\\\src\\\\viajes\\\\FormularioViajes.tsx\",\n    _s = $RefreshSig$();\n\nimport { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport FormGroupText from \"utils/FormGroupText\";\nimport FormGroupImagen from \"utils/FormGroupImagen\";\nimport Button from \"utils/Button\";\nimport { Link } from \"react-router-dom\";\nimport SelectorMultiple from \"utils/SelectorMultiple\";\nimport { useState } from \"react\";\nimport FormGroupMarkdown from \"utils/FormGroupMarkdown\";\nimport MapaFormulario from \"utils/MapaFormulario\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormularioViajes(props) {\n  _s();\n\n  const [tiposActividadSeleccionados, setTiposActividadSeleccionados] = useState(mapear(props.tiposActividadesSeleccionados));\n  const [tiposActividadNoSeleccionados, setTiposActividadNoSeleccionados] = useState(mapear(props.tiposActividadesNoSeleccionados));\n  const [promocionesSeleccionados, setPromocionesSeleccionados] = useState(mapear(props.promocionesSeleccionados));\n  const [promocionesNoSeleccionados, setPromocionesNoSeleccionados] = useState(mapear(props.promocionesNoSeleccionados));\n\n  function mapear(arreglo) {\n    return arreglo.map(valor => {\n      return {\n        llave: valor.id,\n        valor: valor.nombre\n      };\n    });\n  }\n\n  function transformarCoordenada() {\n    if (props.modelo.latitud && props.modelo.longitud) {\n      const respuesta = {\n        lat: props.modelo.latitud,\n        lng: props.modelo.longitud,\n        nombre: props.modelo.lugar\n      };\n      return [respuesta];\n    }\n\n    return undefined;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.modelo,\n    onSubmit: (valores, acciones) => {\n      valores.tipoActividadesIds = tiposActividadSeleccionados.map(valor => valor.llave);\n      valores.promocionesIds = promocionesSeleccionados.map(valor => valor.llave);\n      props.onSubmit(valores, acciones);\n    },\n    validationSchema: Yup.object({\n      pais: Yup.string().required('Este campo es requerido'),\n      lugar: Yup.string().required('Este campo es requerido'),\n      precio: Yup.number().required('Este campo es requerido').positive(\"Ingresa un nÃºmero mayor que 0\")\n    }),\n    children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FormGroupText, {\n        label: \"Pais\",\n        campo: \"pais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormGroupText, {\n        label: \"Lugar\",\n        campo: \"lugar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormGroupImagen, {\n        campo: \"foto\",\n        label: \"Foto\",\n        imagenURL: props.modelo.fotoURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormGroupMarkdown, {\n        campo: \"descripcion\",\n        label: \"Descripcion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormGroupText, {\n        label: \"Precio\",\n        campo: \"precio\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tipos de Actividades:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SelectorMultiple, {\n          seleccionados: tiposActividadSeleccionados,\n          noSeleccionados: tiposActividadNoSeleccionados,\n          onChange: (seleccionados, noSeleccionados) => {\n            setTiposActividadSeleccionados(seleccionados);\n            setTiposActividadNoSeleccionados(noSeleccionados);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Promociones:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SelectorMultiple, {\n          seleccionados: promocionesSeleccionados,\n          noSeleccionados: promocionesNoSeleccionados,\n          onChange: (seleccionados, noSeleccionados) => {\n            setPromocionesSeleccionados(seleccionados);\n            setPromocionesNoSeleccionados(noSeleccionados);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(MapaFormulario, {\n          campoLat: \"latitud\",\n          campoLng: \"longitud\",\n          coordenadas: transformarCoordenada()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: formikProps.isSubmitting,\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-secondary\",\n        to: \"/\",\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormularioViajes, \"879ygKiqjyEFiLjhbdpw16jN5rA=\");\n\n_c = FormularioViajes;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioViajes\");","map":{"version":3,"sources":["C:/Users/jony8/OneDrive/Documentos/AP.NET-CORE/react-travel/src/viajes/FormularioViajes.tsx"],"names":["Form","Formik","Yup","FormGroupText","FormGroupImagen","Button","Link","SelectorMultiple","useState","FormGroupMarkdown","MapaFormulario","FormularioViajes","props","tiposActividadSeleccionados","setTiposActividadSeleccionados","mapear","tiposActividadesSeleccionados","tiposActividadNoSeleccionados","setTiposActividadNoSeleccionados","tiposActividadesNoSeleccionados","promocionesSeleccionados","setPromocionesSeleccionados","promocionesNoSeleccionados","setPromocionesNoSeleccionados","arreglo","map","valor","llave","id","nombre","transformarCoordenada","modelo","latitud","longitud","respuesta","lat","lng","lugar","undefined","valores","acciones","tipoActividadesIds","promocionesIds","onSubmit","object","pais","string","required","precio","number","positive","formikProps","fotoURL","seleccionados","noSeleccionados","marginBottom","isSubmitting"],"mappings":"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","sourcesContent":["import { Form, Formik, FormikHelpers } from \"formik\";import * as Yup from 'yup'\r\nimport FormGroupText from \"utils/FormGroupText\";\r\nimport FormGroupCheckbox from \"utils/FormGroupCheckbox\";\r\nimport FormGroupFecha from \"utils/FormGroupFecha\";\r\nimport FormGroupImagen from \"utils/FormGroupImagen\";\r\nimport Button from \"utils/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SelectorMultiple, { selectorMultipleModel } from \"utils/SelectorMultiple\";\r\nimport { useState } from \"react\";\r\nimport FormGroupMarkdown from \"utils/FormGroupMarkdown\";\r\nimport { viajeCreacionDTO } from \"./viajes.model\";\r\nimport { tipoActividadDTO } from \"tipoActividad/tipoactividad.model\";\r\nimport { promocionDTO } from \"promociones/promociones.model\";\r\nimport MapaFormulario from \"utils/MapaFormulario\";\r\nimport { coordenadaDTO } from \"utils/coordenadas.model\";\r\n\r\nexport default function FormularioViajes(props: formularioViajesProps) {\r\n    \r\n    const [tiposActividadSeleccionados, setTiposActividadSeleccionados] = \r\n    useState(mapear(props.tiposActividadesSeleccionados));\r\n    const [tiposActividadNoSeleccionados, setTiposActividadNoSeleccionados] = \r\n    useState(mapear(props.tiposActividadesNoSeleccionados));\r\n\r\n    const [promocionesSeleccionados, setPromocionesSeleccionados] =\r\n    useState(mapear(props.promocionesSeleccionados));\r\n    const [promocionesNoSeleccionados, setPromocionesNoSeleccionados] =\r\n    useState(mapear(props.promocionesNoSeleccionados));\r\n    \r\n    function mapear(arreglo: {id: number, nombre: string}[]): selectorMultipleModel[]{\r\n        return arreglo.map(valor => {\r\n            return {llave: valor.id, valor: valor.nombre}\r\n        })\r\n    }\r\n\r\n    function transformarCoordenada(): coordenadaDTO[] | undefined {\r\n        if (props.modelo.latitud && props.modelo.longitud){\r\n            const respuesta: coordenadaDTO = {lat: props.modelo.latitud, \r\n                lng: props.modelo.longitud, nombre: props.modelo.lugar}\r\n            return [respuesta];\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={props.modelo}\r\n            onSubmit={(valores, acciones) => {\r\n                valores.tipoActividadesIds = tiposActividadSeleccionados.map(valor => valor.llave);\r\n                valores.promocionesIds = promocionesSeleccionados.map(valor => valor.llave);\r\n                props.onSubmit(valores, acciones);\r\n            }}\r\n            validationSchema={Yup.object({\r\n                pais: Yup.string().required('Este campo es requerido'),\r\n                lugar: Yup.string().required('Este campo es requerido'),\r\n                precio: Yup.number().required('Este campo es requerido')\r\n                    .positive(\"Ingresa un nÃºmero mayor que 0\"),\r\n            })}\r\n        >\r\n            {formikProps => (\r\n                <Form>\r\n                    <FormGroupText label=\"Pais\" campo=\"pais\" />\r\n                    <FormGroupText label=\"Lugar\" campo=\"lugar\" />\r\n                    <FormGroupImagen campo=\"foto\" label=\"Foto\"\r\n                        imagenURL={props.modelo.fotoURL} />\r\n                    <FormGroupMarkdown campo=\"descripcion\" label=\"Descripcion\" />\r\n                    <FormGroupText label=\"Precio\" campo=\"precio\" type=\"number\"/>\r\n                    <div className=\"form-group\">\r\n                        <label>Tipos de Actividades:</label>\r\n                        <SelectorMultiple seleccionados={tiposActividadSeleccionados}\r\n                            noSeleccionados={tiposActividadNoSeleccionados}\r\n                            onChange={(seleccionados, noSeleccionados) => {\r\n                                setTiposActividadSeleccionados(seleccionados)\r\n                                setTiposActividadNoSeleccionados(noSeleccionados);\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Promociones:</label>\r\n                        <SelectorMultiple seleccionados={promocionesSeleccionados}\r\n                            noSeleccionados={promocionesNoSeleccionados}\r\n                            onChange={(seleccionados, noSeleccionados) => {\r\n                                setPromocionesSeleccionados(seleccionados)\r\n                                setPromocionesNoSeleccionados(noSeleccionados);\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{marginBottom: '1rem'}}>\r\n                        <MapaFormulario campoLat=\"latitud\" campoLng=\"longitud\"\r\n                            coordenadas={transformarCoordenada()}\r\n                        />\r\n                    </div>\r\n\r\n                    <Button disabled={formikProps.isSubmitting} type=\"submit\">Enviar</Button>\r\n                    <Link className=\"btn btn-secondary\" to=\"/\">Cancelar</Link>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\ninterface formularioViajesProps {\r\n    modelo: viajeCreacionDTO;\r\n    onSubmit(valores: viajeCreacionDTO, acciones: FormikHelpers<viajeCreacionDTO>): void;\r\n    tiposActividadesSeleccionados: tipoActividadDTO[];\r\n    tiposActividadesNoSeleccionados: tipoActividadDTO[];\r\n    promocionesSeleccionados: promocionDTO[];\r\n    promocionesNoSeleccionados: promocionDTO[];\r\n}"]},"metadata":{},"sourceType":"module"}