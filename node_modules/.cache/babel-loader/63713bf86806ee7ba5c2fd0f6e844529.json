{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jony8\\\\OneDrive\\\\Escritorio\\\\react-peliculas\\\\src\\\\utils\\\\EditarEntidad.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Cargando from \"./Cargando\";\nimport MostrarErrores from \"./MostarErrores\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditarEntidad(props) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [entidad, setEntidad] = useState();\n  const [errores, setErrores] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    axios.get(props.url + \"/\" + id).then(respuesta => {\n      setEntidad(props.trasformar(respuesta.data));\n    });\n  }, []);\n\n  async function editar(entidadEditar) {\n    try {\n      await axios.put(props.url + \"/\" + id, entidadEditar);\n      console.log(entidadEditar);\n      history.push(props.urlIndice);\n    } catch (error) {\n      setErrores(error.response.data);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MostrarErrores, {\n      errores: errores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), entidad ? props.children(entidad, editar) : /*#__PURE__*/_jsxDEV(Cargando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 58\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditarEntidad, \"cbKOBbQkHTh1d37EHHBTZxvP0AA=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditarEntidad;\nEditarEntidad.defaultProps = {\n  trasformar: entidad => entidad\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"EditarEntidad\");","map":{"version":3,"sources":["C:/Users/jony8/OneDrive/Escritorio/react-peliculas/src/utils/EditarEntidad.tsx"],"names":["axios","useState","useEffect","useHistory","useParams","Cargando","MostrarErrores","EditarEntidad","props","id","entidad","setEntidad","errores","setErrores","history","get","url","then","respuesta","trasformar","data","editar","entidadEditar","put","console","log","push","urlIndice","error","response","children","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAkD,OAAlD;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;;AAEA,eAAe,SAASC,aAAT,CAA4CC,KAA5C,EAA4F;AAAA;;AACvG,QAAM;AAAEC,IAAAA;AAAF,MAAcL,SAAS,EAA7B;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAY,EAAZ,CAAtC;AACA,QAAMa,OAAO,GAAGX,UAAU,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACe,GAAN,CAAUP,KAAK,CAACQ,GAAN,GAAY,GAAZ,GAAkBP,EAA5B,EACCQ,IADD,CACOC,SAAD,IAAwC;AAC1CP,MAAAA,UAAU,CAACH,KAAK,CAACW,UAAN,CAAiBD,SAAS,CAACE,IAA3B,CAAD,CAAV;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,iBAAeC,MAAf,CAAuBC,aAAvB,EAAiD;AAC7C,QAAI;AACA,YAAMtB,KAAK,CAACuB,GAAN,CAAUf,KAAK,CAACQ,GAAN,GAAY,GAAZ,GAAkBP,EAA5B,EAAgCa,aAAhC,CAAN;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACAR,MAAAA,OAAO,CAACY,IAAR,CAAalB,KAAK,CAACmB,SAAnB;AACH,KAJD,CAIC,OAAMC,KAAN,EAAa;AACVf,MAAAA,UAAU,CAACe,KAAK,CAACC,QAAN,CAAeT,IAAhB,CAAV;AACH;AACJ;;AAED,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAER;AAAzB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,OAAO,GAAGF,KAAK,CAACsB,QAAN,CAAepB,OAAf,EAAwBW,MAAxB,CAAH,gBAAqC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFjD;AAAA,kBADJ;AAMH;;GA7BuBd,a;UACAH,S,EAGJD,U;;;KAJII,a;AAwCxBA,aAAa,CAACwB,YAAd,GAA6B;AACzBZ,EAAAA,UAAU,EAAGT,OAAD,IAAkBA;AADL,CAA7B","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { generoDTO, generoCreacionDTO } from \"generos/generos.model\";\r\nimport { useState, useEffect, ReactElement } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Cargando from \"./Cargando\";\r\nimport MostrarErrores from \"./MostarErrores\";\r\n\r\nexport default function EditarEntidad<TCreacion, TLectura>(props: editarEntidadProps<TCreacion, TLectura>) {\r\n    const { id }: any = useParams();\r\n    const [entidad, setEntidad] = useState<TLectura>();\r\n    const [errores, setErrores] = useState<string []>([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        axios.get(props.url + \"/\" + id)\r\n        .then((respuesta: AxiosResponse<TLectura>) => {\r\n            setEntidad(props.trasformar(respuesta.data));\r\n        })\r\n    }, [])\r\n\r\n    async function editar (entidadEditar: TCreacion) {\r\n        try {\r\n            await axios.put(props.url + \"/\" + id, entidadEditar);\r\n            console.log(entidadEditar);\r\n            history.push(props.urlIndice);\r\n        }catch(error) {\r\n            setErrores(error.response.data)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MostrarErrores errores={errores} />\r\n            {entidad ? props.children(entidad, editar) : <Cargando/>}\r\n        </>       \r\n    )\r\n}\r\n\r\n\r\ninterface editarEntidadProps<TCreacion, TLectura> {\r\n    url: string;\r\n    urlIndice: string;\r\n    nombreEntidad: string;\r\n    children(modelo: TCreacion, editar: (entidad: TCreacion) => void) : ReactElement;\r\n    trasformar(entidad: TLectura): TCreacion;\r\n}\r\n\r\nEditarEntidad.defaultProps = {\r\n    trasformar: (entidad: any) => entidad\r\n}"]},"metadata":{},"sourceType":"module"}