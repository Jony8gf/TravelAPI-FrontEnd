{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jony8\\\\OneDrive\\\\Documentos\\\\AP.NET-CORE\\\\react-travel\\\\src\\\\utils\\\\FormGroupFecha.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFormikContext } from \"formik\";\nimport MostrarErrorCampo from './../utils/MostrarErrorCampo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormGroupFecha(props) {\n  _s();\n\n  var _errors$props$campo;\n\n  const {\n    values,\n    validateForm,\n    touched,\n    errors\n  } = useFormikContext();\n  console.log(props.campo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.campo,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      id: props.campo,\n      name: props.campo,\n      defaultValue: values[props.campo],\n      onChange: e => {\n        const fecha = new Date(e.currentTarget.value + 'T00:00:00');\n        values[props.campo] = fecha;\n        validateForm();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), touched[props.campo] && errors[props.campo] ? /*#__PURE__*/_jsxDEV(MostrarErrorCampo, {\n      mensaje: (_errors$props$campo = errors[props.campo]) === null || _errors$props$campo === void 0 ? void 0 : _errors$props$campo.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormGroupFecha, \"qY0THuA31tj6kZcHzz6bWpBYuJI=\", false, function () {\n  return [useFormikContext];\n});\n\n_c = FormGroupFecha;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormGroupFecha\");","map":{"version":3,"sources":["C:/Users/jony8/OneDrive/Documentos/AP.NET-CORE/react-travel/src/utils/FormGroupFecha.tsx"],"names":["useFormikContext","MostrarErrorCampo","FormGroupFecha","props","values","validateForm","touched","errors","console","log","campo","label","e","fecha","Date","currentTarget","value","toString"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,QAAjC;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAAoD;AAAA;;AAAA;;AAC/D,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,MAA4CP,gBAAgB,EAAlE;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,KAAlB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAEP,KAAK,CAACO,KAAtB;AAAA,gBAA8BP,KAAK,CAACQ;AAApC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AACI,MAAA,EAAE,EAAER,KAAK,CAACO,KADd;AAEI,MAAA,IAAI,EAAEP,KAAK,CAACO,KAFhB;AAGI,MAAA,YAAY,EAAEN,MAAM,CAACD,KAAK,CAACO,KAAP,CAHxB;AAII,MAAA,QAAQ,EAAEE,CAAC,IAAI;AACX,cAAMC,KAAK,GAAG,IAAIC,IAAJ,CAASF,CAAC,CAACG,aAAF,CAAgBC,KAAhB,GAAwB,WAAjC,CAAd;AACAZ,QAAAA,MAAM,CAACD,KAAK,CAACO,KAAP,CAAN,GAAsBG,KAAtB;AACAR,QAAAA,YAAY;AACf;AARL;AAAA;AAAA;AAAA;AAAA,YAFJ,EAYKC,OAAO,CAACH,KAAK,CAACO,KAAP,CAAP,IAAwBH,MAAM,CAACJ,KAAK,CAACO,KAAP,CAA9B,gBACD,QAAC,iBAAD;AAAmB,MAAA,OAAO,yBAAEH,MAAM,CAACJ,KAAK,CAACO,KAAP,CAAR,wDAAE,oBAAqBO,QAArB;AAA5B;AAAA;AAAA;AAAA;AAAA,YADC,GACiE,IAbtE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GApBuBf,c;UAC8BF,gB;;;KAD9BE,c","sourcesContent":["import { useFormikContext } from \"formik\";\nimport MostrarErrorCampo from './../utils/MostrarErrorCampo'\n\nexport default function FormGroupFecha(props: formGroupFechaProps) {\n    const { values, validateForm, touched, errors } = useFormikContext<any>();\n    console.log(props.campo)\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={props.campo}>{props.label}</label>\n            <input type=\"date\" className=\"form-control\"\n                id={props.campo}\n                name={props.campo}\n                defaultValue={values[props.campo]}\n                onChange={e => {\n                    const fecha = new Date(e.currentTarget.value + 'T00:00:00');\n                    values[props.campo] = fecha;\n                    validateForm();\n                }}\n            />\n            {touched[props.campo] && errors[props.campo] ? \n            <MostrarErrorCampo mensaje={errors[props.campo]?.toString()!} />: null }\n        </div>\n    )\n}\n\ninterface formGroupFechaProps {\n    campo: string;\n    label: string;\n}"]},"metadata":{},"sourceType":"module"}