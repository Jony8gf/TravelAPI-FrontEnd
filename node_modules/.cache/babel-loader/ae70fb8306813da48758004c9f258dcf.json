{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jony8\\\\OneDrive\\\\Documentos\\\\AP.NET-CORE\\\\react-peliculas\\\\src\\\\utils\\\\Mapa.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { MapContainer, Marker, Popup, TileLayer, useMapEvent } from \"react-leaflet\";\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport 'leaflet/dist/leaflet.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconAnchor: [16, 37]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\nexport default function Mapa(props) {\n  _s();\n\n  const [coordenadas, setCoordenadas] = useState(props.coordenadas);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [18.467455, -69.931242],\n    zoom: 14,\n    style: {\n      height: props.height\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"React Pel\\xEDculas\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), props.soloLectura ? /*#__PURE__*/_jsxDEV(ClickMapa, {\n      setPunto: coordenadas => {\n        setCoordenadas([coordenadas]);\n        props.manejarClickMapa(coordenadas);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : null, coordenadas.map(coordenada => /*#__PURE__*/_jsxDEV(Marcador, { ...coordenada\n    }, coordenada.lat + coordenada.lng, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 44\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mapa, \"1S+MWdzAyb2XquGgtbGg130K6gI=\");\n\n_c = Mapa;\nMapa.defaultProps = {\n  height: '500px',\n  soloLectura: false,\n  manejarClickMapa: () => {}\n};\n\nfunction ClickMapa(props) {\n  _s2();\n\n  useMapEvent('click', e => {\n    props.setPunto({\n      lat: e.latlng.lat,\n      lng: e.latlng.lng\n    });\n  });\n  return null;\n}\n\n_s2(ClickMapa, \"UJFMGIyDtKpxgOUCFJT9iLs+CFY=\", false, function () {\n  return [useMapEvent];\n});\n\n_c2 = ClickMapa;\n\nfunction Marcador(props) {\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    position: [props.lat, props.lng],\n    children: props.nombre ? /*#__PURE__*/_jsxDEV(Popup, {\n      children: props.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Marcador;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Mapa\");\n$RefreshReg$(_c2, \"ClickMapa\");\n$RefreshReg$(_c3, \"Marcador\");","map":{"version":3,"sources":["C:/Users/jony8/OneDrive/Documentos/AP.NET-CORE/react-peliculas/src/utils/Mapa.tsx"],"names":["MapContainer","Marker","Popup","TileLayer","useMapEvent","L","icon","iconShadow","useState","DefaultIcon","iconUrl","shadowUrl","iconAnchor","prototype","options","Mapa","props","coordenadas","setCoordenadas","height","soloLectura","manejarClickMapa","map","coordenada","lat","lng","defaultProps","ClickMapa","e","setPunto","latlng","Marcador","nombre"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiDC,WAAjD,QAAoE,eAApE;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAO,0BAAP;AAEA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAIC,WAAW,GAAGJ,CAAC,CAACC,IAAF,CAAO;AACrBI,EAAAA,OAAO,EAAEJ,IADY;AAErBK,EAAAA,SAAS,EAAEJ,UAFU;AAGrBK,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL;AAHS,CAAP,CAAlB;AAMAP,CAAC,CAACJ,MAAF,CAASY,SAAT,CAAmBC,OAAnB,CAA2BR,IAA3B,GAAkCG,WAAlC;AAEA,eAAe,SAASM,IAAT,CAAcC,KAAd,EAA+B;AAAA;;AAC1C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAkBQ,KAAK,CAACC,WAAxB,CAA9C;AACA,sBACI,QAAC,YAAD;AACI,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,CAAC,SAAb,CADZ;AACqC,IAAA,IAAI,EAAE,EAD3C;AAEI,IAAA,KAAK,EAAE;AAACE,MAAAA,MAAM,EAAEH,KAAK,CAACG;AAAf,KAFX;AAAA,4BAII,QAAC,SAAD;AAAW,MAAA,WAAW,EAAC,oBAAvB;AACI,MAAA,GAAG,EAAC;AADR;AAAA;AAAA;AAAA;AAAA,YAJJ,EAOKH,KAAK,CAACI,WAAN,gBACG,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEH,WAAW,IAAI;AAChCC,QAAAA,cAAc,CAAC,CAACD,WAAD,CAAD,CAAd;AACAD,QAAAA,KAAK,CAACK,gBAAN,CAAuBJ,WAAvB;AACH;AAHD;AAAA;AAAA;AAAA;AAAA,YADH,GAIW,IAXhB,EAaKA,WAAW,CAACK,GAAZ,CAAgBC,UAAU,iBAAI,QAAC,QAAD,OACzBA;AADyB,OAAeA,UAAU,CAACC,GAAX,GAAiBD,UAAU,CAACE,GAA3C;AAAA;AAAA;AAAA;AAAA,YAA9B,CAbL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GArBuBV,I;;KAAAA,I;AA8BxBA,IAAI,CAACW,YAAL,GAAoB;AAChBP,EAAAA,MAAM,EAAE,OADQ;AAEhBC,EAAAA,WAAW,EAAE,KAFG;AAGhBC,EAAAA,gBAAgB,EAAE,MAAM,CAAE;AAHV,CAApB;;AAMA,SAASM,SAAT,CAAmBX,KAAnB,EAAyC;AAAA;;AACrCZ,EAAAA,WAAW,CAAC,OAAD,EAAUwB,CAAC,IAAI;AACtBZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AAACL,MAAAA,GAAG,EAAEI,CAAC,CAACE,MAAF,CAASN,GAAf;AAAoBC,MAAAA,GAAG,EAAEG,CAAC,CAACE,MAAF,CAASL;AAAlC,KAAf;AACH,GAFU,CAAX;AAGA,SAAO,IAAP;AACH;;IALQE,S;UACLvB,W;;;MADKuB,S;;AAWT,SAASI,QAAT,CAAkBf,KAAlB,EAAuC;AACnC,sBACI,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,CAACA,KAAK,CAACQ,GAAP,EAAYR,KAAK,CAACS,GAAlB,CAAlB;AAAA,cACKT,KAAK,CAACgB,MAAN,gBAAe,QAAC,KAAD;AAAA,gBAAQhB,KAAK,CAACgB;AAAd;AAAA;AAAA;AAAA;AAAA,YAAf,GAA+C;AADpD;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MANQD,Q","sourcesContent":["import { MapContainer, Marker, Popup, TileLayer, useMapEvent } from \"react-leaflet\"\nimport L from 'leaflet'\nimport icon from 'leaflet/dist/images/marker-icon.png'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\nimport 'leaflet/dist/leaflet.css';\nimport {coordenadaDTO} from './coordenadas.model'\nimport { useState } from \"react\";\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow,\n    iconAnchor: [16, 37]\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nexport default function Mapa(props: mapaProps){\n    const [coordenadas, setCoordenadas] = useState<coordenadaDTO[]>(props.coordenadas)\n    return (\n        <MapContainer\n            center={[18.467455, -69.931242]} zoom={14}\n            style={{height: props.height}}\n        >\n            <TileLayer attribution=\"React PelÃ­culas\"\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            {props.soloLectura ? \n                <ClickMapa setPunto={coordenadas => {\n                    setCoordenadas([coordenadas]);\n                    props.manejarClickMapa(coordenadas);\n                }} /> : null}\n            \n            {coordenadas.map(coordenada => <Marcador key={coordenada.lat + coordenada.lng} \n              {...coordenada}\n            />)}\n        </MapContainer>\n    )\n}\n\ninterface mapaProps {\n    height: string;\n    coordenadas: coordenadaDTO[];\n    manejarClickMapa(coordenadas: coordenadaDTO): void;\n    soloLectura: boolean;\n}\n\nMapa.defaultProps = {\n    height: '500px',\n    soloLectura: false,\n    manejarClickMapa: () => {}\n}\n\nfunction ClickMapa(props: clickMapaProps){\n    useMapEvent('click', e => {\n        props.setPunto({lat: e.latlng.lat, lng: e.latlng.lng})\n    })\n    return null;\n}\n\ninterface clickMapaProps {\n    setPunto(coordenadas: coordenadaDTO): void;\n}\n\nfunction Marcador(props: coordenadaDTO){\n    return (\n        <Marker position={[props.lat, props.lng]}> \n            {props.nombre ? <Popup>{props.nombre}</Popup> : null}\n        </Marker>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}