{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jony8\\\\OneDrive\\\\Escritorio\\\\react-travel\\\\src\\\\auth\\\\FormulartioAuth.tsx\",\n    _s = $RefreshSig$();\n\nimport { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport FormGroupText from \"utils/FormGroupText\";\nimport Button from \"utils/Button\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormularioAuth(props, type) {\n  _s();\n\n  const {\n    ruta\n  } = useParams();\n  console.log(ruta);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.modelo,\n    onSubmit: props.onSubmit,\n    validationSchema: Yup.object({\n      email: Yup.string().required('Este campo es requerido').email('Debe colocar un email valido'),\n      password: Yup.string().required('Este campo es requerido').min(8, 'La contraseña es demasiado pequeña - El numero de caracteres minimo es 8.'),\n      password2: Yup.string().required('Este campo es requerido').min(8, 'La contraseña es demasiado pequeña - El numero de caracteres minimo es 8.').oneOf([Yup.ref('password'), null], 'Las contraseñas no coinciden')\n    }),\n    children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FormGroupText, {\n        label: \"Email\",\n        campo: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(FormGroupText, {\n        label: \"Password\",\n        campo: \"password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), type === 'logout' ? /*#__PURE__*/_jsxDEV(FormGroupText, {\n        label: \"Repetir Password\",\n        campo: \"password2\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 46\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        disabled: formikProps.isSubmitting,\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-secondary\",\n        to: \"/\",\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormularioAuth, \"X281QJSbwdYW6ZEVFKC9yPpMBTA=\", false, function () {\n  return [useParams];\n});\n\n_c = FormularioAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioAuth\");","map":{"version":3,"sources":["C:/Users/jony8/OneDrive/Escritorio/react-travel/src/auth/FormulartioAuth.tsx"],"names":["Form","Formik","Yup","FormGroupText","Button","Link","useParams","FormularioAuth","props","type","ruta","console","log","modelo","onSubmit","object","email","string","required","password","min","password2","oneOf","ref","formikProps","isSubmitting"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,MAAf,QAA4C,QAA5C;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAAoDC,IAApD,EAAiE;AAAA;;AAE5E,QAAM;AAACC,IAAAA;AAAD,MAASJ,SAAS,EAAxB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,sBACI,QAAC,MAAD;AAAQ,IAAA,aAAa,EAAEF,KAAK,CAACK,MAA7B;AACI,IAAA,QAAQ,EAAEL,KAAK,CAACM,QADpB;AAEI,IAAA,gBAAgB,EAAEZ,GAAG,CAACa,MAAJ,CAAW;AACzBC,MAAAA,KAAK,EAAEd,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,EAAiDF,KAAjD,CAAuD,8BAAvD,CADkB;AAEzBG,MAAAA,QAAQ,EAAEjB,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,EACLE,GADK,CACD,CADC,EACE,2EADF,CAFe;AAIzBC,MAAAA,SAAS,EAAEnB,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,EACNE,GADM,CACF,CADE,EACC,2EADD,EAENE,KAFM,CAEA,CAACpB,GAAG,CAACqB,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAFA,EAE6B,8BAF7B;AAJc,KAAX,CAFtB;AAAA,cAaSC,WAAW,iBACR,QAAC,IAAD;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,OAArB;AAA6B,QAAA,KAAK,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,UAArB;AAAgC,QAAA,KAAK,EAAC,UAAtC;AAAiD,QAAA,IAAI,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKf,IAAI,KAAK,QAAT,gBAAoB,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,kBAArB;AAAwC,QAAA,KAAK,EAAC,WAA9C;AAA0D,QAAA,IAAI,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,cAApB,GAAmG,IAHxG,eAMI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEe,WAAW,CAACC,YAA9B;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAoC,QAAA,EAAE,EAAC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAdZ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAlCuBlB,c;UAELD,S;;;KAFKC,c","sourcesContent":["import { Form, Formik, FormikHelpers } from \"formik\";\r\nimport { credencialesUsuario } from \"./auth.model\";\r\nimport * as Yup from 'yup';\r\nimport FormGroupText from \"utils/FormGroupText\";\r\nimport Button from \"utils/Button\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport default function FormularioAuth(props: formularioAuthProps, type: string){\r\n\r\n    const {ruta} = useParams();\r\n    console.log(ruta)\r\n\r\n    return(\r\n        <Formik initialValues={props.modelo}\r\n            onSubmit={props.onSubmit}\r\n            validationSchema={Yup.object({\r\n                email: Yup.string().required('Este campo es requerido').email('Debe colocar un email valido'),\r\n                password: Yup.string().required('Este campo es requerido') \r\n                    .min(8, 'La contraseña es demasiado pequeña - El numero de caracteres minimo es 8.'),\r\n                password2: Yup.string().required('Este campo es requerido') \r\n                    .min(8, 'La contraseña es demasiado pequeña - El numero de caracteres minimo es 8.')\r\n                    .oneOf([Yup.ref('password'), null], 'Las contraseñas no coinciden'),\r\n            })} \r\n            \r\n            >\r\n            \r\n                {formikProps => (\r\n                    <Form>\r\n                        <FormGroupText label=\"Email\" campo=\"email\" />\r\n                        <FormGroupText label=\"Password\" campo=\"password\" type=\"password\" />\r\n                        {type === 'logout' ? <FormGroupText label=\"Repetir Password\" campo=\"password2\" type=\"password\" /> : null }\r\n                        \r\n\r\n                        <Button disabled={formikProps.isSubmitting} type=\"submit\">Enviar</Button>\r\n                        <Link className=\"btn btn-secondary\" to=\"/\">Cancelar</Link>\r\n                    </Form>\r\n                )}\r\n\r\n\r\n            </Formik>\r\n    )\r\n}\r\n\r\ninterface formularioAuthProps{\r\n    modelo: credencialesUsuario;\r\n    onSubmit(valores: credencialesUsuario, acciones: FormikHelpers<credencialesUsuario>): void\r\n}"]},"metadata":{},"sourceType":"module"}