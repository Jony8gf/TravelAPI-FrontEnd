{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jony8\\\\OneDrive\\\\Escritorio\\\\react-peliculas\\\\src\\\\peliculas\\\\DetallePelicula.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Cargando from \"utils/Cargando\";\nimport { urlPeliculas } from \"utils/endpoints\";\nimport Mapa from \"utils/Mapa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetallePelicula() {\n  _s();\n\n  var _pelicula$actores;\n\n  const {\n    id\n  } = useParams();\n  const [pelicula, setPelicula] = useState();\n  useEffect(() => {\n    axios.get(`${urlPeliculas}/${id}`).then(respuesta => {\n      respuesta.data.fechaLanzamiento = new Date(respuesta.data.fechaLanzamiento);\n      setPelicula(respuesta.data);\n    });\n  }, [id]);\n\n  function transformarCoordenadas() {\n    if (pelicula === null || pelicula === void 0 ? void 0 : pelicula.cines) {\n      const coordenadas = pelicula.cines.map(cine => {\n        return {\n          lat: cine.latitud,\n          lng: cine.longitud,\n          nombre: cine.nombre\n        };\n      });\n      return coordenadas;\n    }\n\n    return [];\n  }\n\n  function generarURLYoutubeEmbebido(url) {\n    if (!url) {\n      return '';\n    }\n\n    var video_id = url.split('v=')[1];\n    var posicionAmpersand = video_id.indexOf('&');\n\n    if (posicionAmpersand !== -1) {\n      video_id = video_id.substring(0, posicionAmpersand);\n    }\n\n    return `https://www.youtube.com/embed/${video_id}`;\n  }\n\n  return pelicula ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [pelicula.titulo, \" (\", pelicula.fechaLanzamiento.getFullYear(), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), pelicula.generos.map(genero => /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          marginRight: '1rem'\n        },\n        className: \"btn btn-primary btn-sm rounded-pill\",\n        to: '/peliculas/filtrar?generoId=' + genero.id,\n        children: genero.nombre\n      }, genero.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)), \"| \", pelicula.fechaLanzamiento.toDateString(), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'inline-block',\n            marginRight: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pelicula.poster,\n            style: {\n              width: '225px',\n              height: '315px'\n            },\n            alt: \"poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), pelicula.trailer ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            title: \"youtube-trailer\",\n            width: \"560\",\n            height: \"315\",\n            src: generarURLYoutubeEmbebido(pelicula.trailer),\n            frameBorder: 0,\n            allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 45\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), pelicula.resumen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Resumen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: pelicula.resumen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this) : null, pelicula.actores && pelicula.actores.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Actores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: (_pelicula$actores = pelicula.actores) === null || _pelicula$actores === void 0 ? void 0 : _pelicula$actores.map(actor => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '2px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"foto\",\n              src: actor.foto,\n              style: {\n                width: '50px',\n                verticalAlign: 'middle'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: 'inline-block',\n                width: '200px',\n                marginLeft: '1rem'\n              },\n              children: actor.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: 'inline-block',\n                width: '45px'\n              },\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: actor.personaje\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 41\n            }, this)]\n          }, actor.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this) : null, pelicula.cines && pelicula.cines.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Mostr\\xE1ndose en los siguiente cines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Mapa, {\n          soloLectura: true,\n          coordenadas: transformarCoordenadas()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Cargando, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 18\n  }, this);\n}\n\n_s(DetallePelicula, \"6EFdIvDGhIgf5FhxVFF9twEm+RI=\", false, function () {\n  return [useParams];\n});\n\n_c = DetallePelicula;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetallePelicula\");","map":{"version":3,"sources":["C:/Users/jony8/OneDrive/Escritorio/react-peliculas/src/peliculas/DetallePelicula.tsx"],"names":["axios","useEffect","useState","ReactMarkdown","Link","useParams","Cargando","urlPeliculas","Mapa","DetallePelicula","id","pelicula","setPelicula","get","then","respuesta","data","fechaLanzamiento","Date","transformarCoordenadas","cines","coordenadas","map","cine","lat","latitud","lng","longitud","nombre","generarURLYoutubeEmbebido","url","video_id","split","posicionAmpersand","indexOf","substring","display","titulo","getFullYear","generos","genero","marginRight","toDateString","marginTop","poster","width","height","trailer","resumen","actores","length","flexDirection","actor","marginBottom","foto","verticalAlign","marginLeft","personaje"],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { Link, useParams } from \"react-router-dom\"\r\nimport Cargando from \"utils/Cargando\";\r\nimport { coordenadaDTO } from \"utils/coordenadas.model\";\r\nimport { urlPeliculas } from \"utils/endpoints\";\r\nimport Mapa from \"utils/Mapa\";\r\nimport { peliculaDTO } from \"./peliculas.model\";\r\n\r\nexport default function DetallePelicula() {\r\n\r\n    const {id}: any = useParams();\r\n    const [pelicula, setPelicula] = useState<peliculaDTO>();\r\n\r\n    useEffect(() => {\r\n        axios.get(`${urlPeliculas}/${id}`)\r\n            .then((respuesta: AxiosResponse<peliculaDTO>) => {\r\n                respuesta.data.fechaLanzamiento = new Date(respuesta.data.fechaLanzamiento);\r\n                setPelicula(respuesta.data);\r\n            })\r\n    }, [id])\r\n\r\n\r\n    function transformarCoordenadas(): coordenadaDTO[]{\r\n        if (pelicula?.cines){\r\n            const coordenadas = pelicula.cines.map(cine => {\r\n                return {lat: cine.latitud, \r\n                    lng: cine.longitud, nombre: cine.nombre} as coordenadaDTO;\r\n            });\r\n            return coordenadas;\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    function generarURLYoutubeEmbebido(url: any): string {\r\n        if (!url) {\r\n            return '';\r\n        }\r\n\r\n        var video_id = url.split('v=')[1];\r\n        var posicionAmpersand = video_id.indexOf('&');\r\n        if (posicionAmpersand !== -1) {\r\n            video_id = video_id.substring(0, posicionAmpersand);\r\n        }\r\n\r\n        return `https://www.youtube.com/embed/${video_id}`\r\n    }\r\n\r\n    return (\r\n        pelicula ? \r\n        <div style={{display: 'flex'}}>\r\n            <div>\r\n                <h2>{pelicula.titulo} ({pelicula.fechaLanzamiento.getFullYear()})</h2>\r\n                {pelicula.generos.map(genero => \r\n                    <Link key={genero.id} style={{marginRight: '1rem'}} className=\"btn btn-primary btn-sm rounded-pill\"\r\n                    to={'/peliculas/filtrar?generoId='+genero.id} >{genero.nombre}</Link>\r\n                )}\r\n                \r\n                | {pelicula.fechaLanzamiento.toDateString()}\r\n\r\n                <div style={{ display: 'flex', marginTop: '1rem' }}>\r\n                        <span style={{ display: 'inline-block', marginRight: '1rem' }}>\r\n                            <img src={pelicula.poster}\r\n                                style={{ width: '225px', height: '315px' }}\r\n                                alt=\"poster\"\r\n                            />\r\n                        </span>\r\n                        {pelicula.trailer ? <div>\r\n                            <iframe\r\n                                title=\"youtube-trailer\"\r\n                                width=\"560\"\r\n                                height=\"315\"\r\n                                src={generarURLYoutubeEmbebido(pelicula.trailer)}\r\n                                frameBorder={0}\r\n                                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                                allowFullScreen\r\n                            >\r\n\r\n                            </iframe>\r\n                        </div> : null}\r\n                </div>\r\n\r\n                {pelicula.resumen ? \r\n                <div style={{marginTop: '1rem' }}>\r\n                    <h3>Resumen</h3>\r\n                    <div>\r\n                        <ReactMarkdown>{pelicula.resumen}</ReactMarkdown>\r\n                    </div>\r\n\r\n                </div> : null}\r\n\r\n                {pelicula.actores && pelicula.actores.length > 0 ?\r\n                        <div style={{ marginTop: '1rem' }}>\r\n                            <h3>Actores</h3>\r\n                            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                {pelicula.actores?.map(actor =>\r\n                                    <div key={actor.id} style={{ marginBottom: '2px' }}>\r\n                                        <img alt=\"foto\" src={actor.foto}\r\n                                            style={{ width: '50px', verticalAlign: 'middle' }} />\r\n                                        <span style={{\r\n                                            display: 'inline-block', width: '200px',\r\n                                            marginLeft: '1rem'\r\n                                        }}>\r\n                                            {actor.nombre}\r\n                                        </span>\r\n                                        <span style={{\r\n                                            display: 'inline-block',\r\n                                            width: '45px'\r\n                                        }}>...</span>\r\n                                        <span>{actor.personaje}</span>\r\n                                    </div>)}\r\n                            </div>\r\n                        </div> : null}\r\n\r\n                    {pelicula.cines && pelicula.cines.length > 0 ?\r\n                        <div>\r\n                            <h2>Mostrándose en los siguiente cines</h2>\r\n                            <Mapa soloLectura={true} coordenadas={transformarCoordenadas()} />\r\n                        </div> : null}\r\n\r\n            </div>\r\n\r\n        </div> : <Cargando />\r\n            \r\n        \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}