{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jony8\\\\OneDrive\\\\Documentos\\\\AP.NET-CORE\\\\react-travel\\\\src\\\\viajes\\\\CrearViajes.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Cargando from \"utils/Cargando\";\nimport { urlViajes } from \"utils/endpoints\";\nimport { convertirViajeAFormData } from \"utils/FormDataUtils\";\nimport MostrarErrores from \"utils/MostarErrores\";\nimport FormularioViajes from \"./FormularioViajes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CrearViajes() {\n  _s();\n\n  const [tiposActvidadNoSeleccionados, setTiposActvidadNoSeleccionados] = useState([]);\n  const [promocionesNoSeleccionados, setPromocionesNoSeleccionados] = useState([]);\n  const [cargado, setCargado] = useState(false);\n  const history = useHistory();\n  const [errores, setErrores] = useState([]);\n  useEffect(() => {\n    axios.get(`${urlViajes}/postget`).then(respuesta => {\n      setTiposActvidadNoSeleccionados(respuesta.data.tipoActividades);\n      setPromocionesNoSeleccionados(respuesta.data.promociones);\n      setCargado(true);\n    });\n  }, []);\n\n  async function crearViaje(viaje) {\n    try {\n      const formData = convertirViajeAFormData(viaje);\n      await axios({\n        method: 'post',\n        url: urlViajes,\n        data: formData,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(respuesta => {\n        history.push(`/viajes/${respuesta.data}`);\n      });\n    } catch (error) {\n      setErrores(error.response.data);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Crear Viaje\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MostrarErrores, {\n      errores: errores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), cargado ? /*#__PURE__*/_jsxDEV(FormularioViajes, {\n      promocionesNoSeleccionados: promocionesNoSeleccionados,\n      promocionesSeleccionados: [],\n      tiposActividadesNoSeleccionados: tiposActvidadNoSeleccionados,\n      tiposActividadesSeleccionados: [],\n      modelo: {\n        lugar: '',\n        pais: '',\n        descripcion: '',\n        precio: 1,\n        fotoURL: ''\n      },\n      onSubmit: async valores => crearViaje(valores)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Cargando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CrearViajes, \"oXgOXt5OzdUi5a1rPdMpHCqc8Y0=\", false, function () {\n  return [useHistory];\n});\n\n_c = CrearViajes;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrearViajes\");","map":{"version":3,"sources":["C:/Users/jony8/OneDrive/Documentos/AP.NET-CORE/react-travel/src/viajes/CrearViajes.tsx"],"names":["axios","useEffect","useState","useHistory","Cargando","urlViajes","convertirViajeAFormData","MostrarErrores","FormularioViajes","CrearViajes","tiposActvidadNoSeleccionados","setTiposActvidadNoSeleccionados","promocionesNoSeleccionados","setPromocionesNoSeleccionados","cargado","setCargado","history","errores","setErrores","get","then","respuesta","data","tipoActividades","promociones","crearViaje","viaje","formData","method","url","headers","push","error","response","lugar","pais","descripcion","precio","fotoURL","valores"],"mappings":";;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAGA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAElC,QAAM,CAACC,4BAAD,EAA+BC,+BAA/B,IAAkET,QAAQ,CAAqB,EAArB,CAAhF;AACA,QAAM,CAACU,0BAAD,EAA6BC,6BAA7B,IAA8DX,QAAQ,CAAiB,EAAjB,CAA5E;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMc,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAW,EAAX,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAEd,SAAU,UAAvB,EACCe,IADD,CACOC,SAAD,IAA+C;AACjDV,MAAAA,+BAA+B,CAACU,SAAS,CAACC,IAAV,CAAeC,eAAhB,CAA/B;AACAV,MAAAA,6BAA6B,CAACQ,SAAS,CAACC,IAAV,CAAeE,WAAhB,CAA7B;AACAT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;;AASA,iBAAeU,UAAf,CAA0BC,KAA1B,EAAmD;AAC/C,QAAG;AACC,YAAMC,QAAQ,GAAGrB,uBAAuB,CAACoB,KAAD,CAAxC;AACA,YAAM1B,KAAK,CAAC;AACR4B,QAAAA,MAAM,EAAE,MADA;AAERC,QAAAA,GAAG,EAAExB,SAFG;AAGRiB,QAAAA,IAAI,EAAEK,QAHE;AAIRG,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAJD,OAAD,CAAL,CAKHV,IALG,CAKGC,SAAD,IAAsC;AAC1CL,QAAAA,OAAO,CAACe,IAAR,CAAc,WAAUV,SAAS,CAACC,IAAK,EAAvC;AACH,OAPK,CAAN;AASH,KAXD,CAYA,OAAOU,KAAP,EAAa;AACTd,MAAAA,UAAU,CAACc,KAAK,CAACC,QAAN,CAAeX,IAAhB,CAAV;AACH;AACJ;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEL;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKH,OAAO,gBAAI,QAAC,gBAAD;AACZ,MAAA,0BAA0B,EAAEF,0BADhB;AAEZ,MAAA,wBAAwB,EAAE,EAFd;AAGZ,MAAA,+BAA+B,EAAEF,4BAHrB;AAIZ,MAAA,6BAA6B,EAAE,EAJnB;AAKR,MAAA,MAAM,EAAE;AAAEwB,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,IAAI,EAAE,EAAnB;AAAuBC,QAAAA,WAAW,EAAC,EAAnC;AAAwCC,QAAAA,MAAM,EAAE,CAAhD;AAAmDC,QAAAA,OAAO,EAAC;AAA3D,OALA;AAMR,MAAA,QAAQ,EAAE,MAAMC,OAAN,IAAiBd,UAAU,CAACc,OAAD;AAN7B;AAAA;AAAA;AAAA;AAAA,YAAJ,gBAOH,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAVT;AAAA,kBADJ;AAeH;;GAlDuB9B,W;UAKJN,U;;;KALIM,W","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { promocionDTO } from \"promociones/promociones.model\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { tipoActividadDTO } from \"tipoActividad/tipoactividad.model\";\r\nimport Cargando from \"utils/Cargando\";\r\nimport { urlViajes } from \"utils/endpoints\";\r\nimport { convertirViajeAFormData } from \"utils/FormDataUtils\";\r\nimport MostrarErrores from \"utils/MostarErrores\";\r\nimport FormularioViajes from \"./FormularioViajes\";\r\nimport { viajeCreacionDTO, viajePostGetDTO } from \"./viajes.model\";\r\n\r\nexport default function CrearViajes() {\r\n\r\n    const [tiposActvidadNoSeleccionados, setTiposActvidadNoSeleccionados] = useState<tipoActividadDTO[]>([]);\r\n    const [promocionesNoSeleccionados, setPromocionesNoSeleccionados] = useState<promocionDTO[]>([]);\r\n    const [cargado, setCargado] = useState(false);\r\n    const history = useHistory();\r\n    const [errores, setErrores] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`${urlViajes}/postget`)\r\n        .then((respuesta: AxiosResponse<viajePostGetDTO>) => {\r\n            setTiposActvidadNoSeleccionados(respuesta.data.tipoActividades);\r\n            setPromocionesNoSeleccionados(respuesta.data.promociones);\r\n            setCargado(true)\r\n        })\r\n    }, [])\r\n\r\n    async function crearViaje(viaje: viajeCreacionDTO) {\r\n        try{\r\n            const formData = convertirViajeAFormData(viaje);\r\n            await axios({\r\n                method: 'post',\r\n                url: urlViajes,\r\n                data: formData,\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            }).then((respuesta: AxiosResponse<number>) => {\r\n                history.push(`/viajes/${respuesta.data}`);\r\n            });\r\n            \r\n        }\r\n        catch (error){\r\n            setErrores(error.response.data)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Crear Viaje</h3>\r\n            <MostrarErrores errores={errores} />\r\n            {cargado ?  <FormularioViajes\r\n            promocionesNoSeleccionados={promocionesNoSeleccionados}\r\n            promocionesSeleccionados={[]}\r\n            tiposActividadesNoSeleccionados={tiposActvidadNoSeleccionados}\r\n            tiposActividadesSeleccionados={[]}\r\n                modelo={{ lugar: '', pais: '', descripcion:'' , precio: 1, fotoURL:''}}\r\n                onSubmit={async valores => crearViaje(valores)}\r\n            /> : <Cargando />}\r\n            \r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}